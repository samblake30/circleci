version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.1

executors:
  docker-build-exec:
    working_directory: /home/circleci/opt/project
    docker:
      - image: cimg/python:3.11
    resource_class: medium

commands:
  docker-build:
    description: "Check and build the dockerfile"
    parameters:
      image_name:
        type: string
        description: "The name of the docker image"
      tag_name:
        type: string
        description: "Tha tag to use for build"
        default: "latest"
    steps:
      - run:
          name: Build Docker Image
          command: |
            cd << parameters.image_name >>
            if [ -f Dockerfile ]; then
              docker build -t << parameters.image_name >>:<< parameters.tag_name >> .
              BUILT_IMAGE=$(docker images << parameters.image_name >>:<< parameters.tag_name >>)
              echo "BUILT_IMAGE=$BUILT_IMAGE" >>$BASH_ENV
            else
              echo "No Dockerfile found"
            fi

  clean-docker-build:
    description: "This safety step to cleanup the images"
    steps:
      - run:
          name: Cleanup
          command: |
            docker rmi $IMAGE_NAME

jobs:
  build-main:
    executor: docker-build-exec
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-cli/install
      - run:
          name: List changed files in PR
          command: |
            git fetch origin main
            IMAGE_NAME=$(git diff --name-only origin/main...$CIRCLE_BRANCH | xargs -n1 dirname | head -1)
            echo "export IMAGE_NAME=$IMAGE_NAME" >> $BASH_ENV
            echo $IMAGE_NAME
      - docker-build:
          image_name: "${IMAGE_NAME}"
          tag_name: "latest"

  pr-comment:
    executor: docker-build-exec
    steps:
      - run:
          name: Update the build status to Open PR
          command: |
            echo "Posting details fo the built image to PR"
            
            #Build the Markdown body with collapsible details
            BODY="Automated update: Built Docker Image details.
            <details>
            <summary>üêãDocker Image</summary>
  
            \`\`\`bash
            $BUILT_IMAGE
            \`\`\`
            </details>
            "
            
            # Use file instead of inline body
            comment_response=$(curl -sSL -X POST "$CI_PULL_REQUEST" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "{\"body\": $(echo "$BODY" | jq -Rs .) }")
  
            echo "‚úÖ Comment posted successfully to PR."

      - clean-docker-build

workflows:
  build:
    jobs:
      - build-main:
          context: ctx-ci
          filters:
            branches:
              ignore:
                - main
      - pr-comment:
          context: ctx-ci
          requires:
            - build-main
          filters:
            branches:
              ignore:
                - main
